{"mappings":"AAAC,MACG,MAAMA,EAAO,CACTC,eAAgBC,SAASC,cAAc,aACvCC,mBAAoBF,SAASG,iBAAiB,sBAC9CC,oBAAqBJ,SAASC,cAAc,wBAE5CI,MAAOL,SAASC,cAAc,UAC9BK,KAAMN,SAASG,iBAAiB,sBAEhCI,eAAgBP,SAASG,iBAAiB,kCAC1CK,YAAaR,SAASC,cAAc,2BAGlCQ,EAAQ,CACVC,WAAY,EACZC,WAAY,GAEhBC,OAAOC,OAAOJ,GAIdX,EAAKI,mBAAmBY,SAASC,IAC7BA,EAAIC,iBAAiB,SAAS,KAC1BlB,EAAKC,eAAekB,MAAMC,UAAY,YACtClB,SAASmB,KAAKF,MAAMG,SAAW,QAAQ,GACzC,IAINtB,EAAKM,oBAAoBY,iBAAiB,SAAS,KAC/ClB,EAAKC,eAAekB,MAAMC,UAAY,YACtClB,SAASmB,KAAKF,MAAMG,SAAW,SAAS,IAK5CtB,EAAKO,MAAMW,iBAAiB,WAAYK,IACpCA,EAAEC,eAEFxB,EAAKU,YAAYe,YAAc,iBAC/B,IAAIC,GAAoB,EAExB,IAAK,IAAIC,EAAM,EAAGA,EAAM3B,EAAKQ,KAAKoB,SAAUD,EACL,GAA/B3B,EAAKQ,KAAKmB,GAAKE,MAAMD,SACrB5B,EAAKS,eAAekB,GAAKG,WAAWnB,EAAME,YAAYM,MAAMY,QAAU,IACtE/B,EAAKS,eAAekB,GAAKG,WAAWnB,EAAMC,YAAYO,MAAMY,QAAU,IACtEL,GAAoB,GAIvBA,IACD1B,EAAKU,YAAYe,YAAc,2BAEnCzB,EAAKU,YAAYS,MAAMY,QAAU,IACjCC,YAAW,KAAQhC,EAAKU,YAAYS,MAAMY,QAAU,GAAG,GAAK,IAAK,IAClE,GAIH,IAAK,IAAIE,EAAM,EAAGA,EAAMjC,EAAKQ,KAAKoB,SAAUK,EACxCjC,EAAKQ,KAAKyB,GAAKf,iBAAiB,SAAS,KACrClB,EAAKS,eAAewB,GAAKH,WAAWnB,EAAME,YAAYM,MAAMY,QAAU,IACtE/B,EAAKS,eAAewB,GAAKH,WAAWnB,EAAMC,YAAYO,MAAMY,QAAU,GAAG,GAGpF,EAjEA,GCEA,MACC,MAAMG,EAAahC,SAASC,cAAc,sBACpCgC,EAAcjC,SAASC,cAAc,iBAGrCiC,EAAa,KACjB,MAAMC,EAA2D,SAA9CF,EAAYG,aAAa,mBAA+B,EAC3EH,EAAYI,aAAa,iBAAkBF,GAE3CH,EAAWM,UAAUC,OAAO,UAAU,EANnBvC,SAASC,cAAc,kBAS/Be,iBAAiB,QAASkB,GACvCD,EAAYjB,iBAAiB,QAASkB,EACvC,EAdA","sources":["src/js/modal.js","src/index.js"],"sourcesContent":["(() => {\n    const refs = {\n        modalContainer: document.querySelector(\".backdrop\"),\n        modalContainerOpen: document.querySelectorAll(\".modal-open-button\"),\n        modalContainerClose: document.querySelector(\".modal__close-button\"),\n\n        modal: document.querySelector(\".modal\"),\n        inps: document.querySelectorAll(\".modal__text-input\"),\n\n        msgsContainers: document.querySelectorAll(\".modal__warning-text-container\"),\n        modalBtnMsg: document.querySelector(\".modal__button-warning\"),\n    }\n\n    const Alert = {\n        wrongInput: 1,\n        emptyInput: 3\n    }\n    Object.freeze(Alert);\n\n\n    // \"Open modal\" buttons\n    refs.modalContainerOpen.forEach( btn => {\n        btn.addEventListener(\"click\", () => {\n            refs.modalContainer.style.transform = \"scaleY(1)\";\n            document.body.style.overflow = \"hidden\";\n        });\n    });\n\n    // The \"close modal\" button. Yes, there's only one of kind\n    refs.modalContainerClose.addEventListener(\"click\", () => {\n        refs.modalContainer.style.transform = \"scaleY(0)\";\n        document.body.style.overflow = \"visible\";\n    });\n\n\n    // Invalid inputs on the submit event\n    refs.modal.addEventListener(\"invalid\", (e) => {\n        e.preventDefault;\n\n        refs.modalBtnMsg.textContent = \"Invalid inputs\";\n        let emptyInputsAbsent = true;\n\n        for (let idx = 0; idx < refs.inps.length; ++idx) {\n            if (refs.inps[idx].value.length == 0) {\n                refs.msgsContainers[idx].childNodes[Alert.emptyInput].style.opacity = \"1\";\n                refs.msgsContainers[idx].childNodes[Alert.wrongInput].style.opacity = \"0\";\n                emptyInputsAbsent = false;\n            }\n        }\n        \n        if (!emptyInputsAbsent) {\n            refs.modalBtnMsg.textContent = \"All fields are required\";\n        }\n        refs.modalBtnMsg.style.opacity = \"1\";\n        setTimeout(() => { refs.modalBtnMsg.style.opacity = \"0\"; }, 2000);\n    }, true);\n\n\n    // Change alert message of an input back if this input gets some... input\n    for (let idx = 0; idx < refs.inps.length; ++idx) {\n        refs.inps[idx].addEventListener(\"input\", () => {\n            refs.msgsContainers[idx].childNodes[Alert.emptyInput].style.opacity = \"0\";\n            refs.msgsContainers[idx].childNodes[Alert.wrongInput].style.opacity = \"1\";\n        });\n    }\n})();","import './js/modal.js';\n\n(() => {\n  const mobileMenu = document.querySelector('.js-menu-container');\n  const openMenuBtn = document.querySelector('.js-open-menu');\n  const closeMenuBtn = document.querySelector('.js-close-menu');\n\n  const toggleMenu = () => {\n    const isMenuOpen = openMenuBtn.getAttribute('aria-expanded') === 'true' || false;\n    openMenuBtn.setAttribute('aria-expanded', !isMenuOpen);\n\n    mobileMenu.classList.toggle('is-open');\n  };\n\n  closeMenuBtn.addEventListener('click', toggleMenu);\n  openMenuBtn.addEventListener('click', toggleMenu);\n})();"],"names":["refs","modalContainer","document","querySelector","modalContainerOpen","querySelectorAll","modalContainerClose","modal","inps","msgsContainers","modalBtnMsg","Alert","wrongInput","emptyInput","Object","freeze","forEach","btn","addEventListener","style","transform","body","overflow","e","preventDefault","textContent","emptyInputsAbsent","idx","length","value","childNodes","opacity","setTimeout","idx1","mobileMenu","openMenuBtn","toggleMenu","isMenuOpen","getAttribute","setAttribute","classList","toggle"],"version":3,"file":"index.cb8e542c.js.map"}